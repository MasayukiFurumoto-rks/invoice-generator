<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.UserDao">
	<resultMap id="userMap" type="com.example.entity.User">
		<id			property="id"			column="user_id" ></id>
		<result 	property="name"			column="user_name" ></result>
		<result 	property="email"		column="user_email" ></result>
		<result 	property="password"		column="user_password"></result>
		<result 	property="departmentId"	column="user_departement_id" ></result>
		<result 	property="position"		column="user_position" ></result>
		<result 	property="deleted"		column="user_deleted" ></result>
		
		<association	property="department" 	resultMap="userDepartmentMap" />
	</resultMap>
 
	<resultMap id="userDepartmentMap" type="com.example.entity.UserDepartment">
		<id     		property="id"		 column="user_departments_id" />
		<result 		property="name"		 column="user_departments_name"/>
		<result 		property="companyId" column="user_company_id"/>
		<association	property="company" 	 resultMap="userCompanyMap" />
		
	</resultMap>
	
	<resultMap id="userCompanyMap" type="com.example.entity.UserCompany">
		<id    	property="id"			column="user_companies_id" />
		<result property="name"			column="user_companies_name" 	/>
	</resultMap>
	
	<select id="findById" resultMap="userMap">
		SELECT
		u.id AS user_id,
		u.name AS user_name,
		u.email AS user_email,
		u.password AS user_password,
		u.user_department_id ,
		u.position AS user_position,
		u.deleted AS user_deleted,
		ud.user_departments_id,
		ud.user_departments_name,
		ud.user_company_id,
		uc.user_companies_id,
		uc.user_companies_name 
		FROM
		users AS u
		JOIN 
		user_departments AS ud 
		ON 
		u.user_department_id = ud.user_departments_id 
		JOIN 
		user_companies AS uc
		ON
		ud.user_company_id = uc.user_companies_id
		WHERE
		u.id = #{id}
	</select>
	<select id="findByEmail" resultMap="userMap">
		SELECT
		u.id AS user_id,
		u.name AS user_name,
		u.email AS user_email,
		u.password AS user_password,
		u.user_department_id ,
		u.position AS user_position,
		u.deleted AS user_deleted,
		ud.user_departments_id,
		ud.user_departments_name,
		ud.user_company_id,
		uc.user_companies_id,
		uc.user_companies_name 
		FROM
		users AS u
		JOIN 
		user_departments AS ud 
		ON 
		u.user_department_id = ud.user_departments_id 
		JOIN 
		user_companies AS uc
		ON
		ud.user_company_id = uc.user_companies_id
		WHERE
		u.email= #{email}
	</select>
	<select id="findByCompanyId" resultMap="userMap">
		SELECT
		u.id AS user_id,
		u.name AS user_name,
		u.email AS user_email,
		u.password AS user_password,
		u.user_department_id ,
		u.position AS user_position,
		u.deleted AS user_deleted,
		ud.user_departments_id,
		ud.user_departments_name,
		ud.user_company_id,
		uc.user_companies_id,
		uc.user_companies_name 
		FROM
		users AS u
		JOIN 
		user_departments AS ud 
		ON 
		u.user_department_id = ud.user_departments_id 
		JOIN 
		user_companies AS uc
		ON
		ud.user_company_id = uc.user_companies_id
		WHERE
		ud.user_company_id= #{companyId}
	</select>
	<insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
		insert into users (name,user_department_id,position,email,password)
		values (#{name},#{departmentId},#{position},#{email},#{password})
	</insert>

</mapper>